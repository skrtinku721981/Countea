{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bindAll = void 0;\nexports.toString = toString;\nexports.runAllChains = runAllChains;\nconst bindAll = object => {\n  const protoKeys = Object.getOwnPropertyNames(Object.getPrototypeOf(object));\n  protoKeys.forEach(key => {\n    const maybeFn = object[key];\n    if (typeof maybeFn === 'function' && key !== 'constructor') {\n      object[key] = maybeFn.bind(object);\n    }\n  });\n  return object;\n};\nexports.bindAll = bindAll;\nfunction toString(value) {\n  if (value instanceof Date) {\n    return value.toISOString();\n  } else if (value && typeof value === 'object' && value.toString) {\n    if (typeof value.toString !== 'function') {\n      return Object.getPrototypeOf(value).toString.call(value);\n    }\n    return value.toString();\n  } else if (value == null || isNaN(value) && !value.length) {\n    return '';\n  }\n  return String(value);\n}\n/**\n * Runs all validation chains, and returns their results.\n *\n * If one of them has a request-level bail set, the previous chains will be awaited on so that\n * results are not skewed, which can be slow.\n * If this same chain also contains errors, no further chains are run.\n */\nasync function runAllChains(req, chains, runOpts) {\n  const promises = [];\n  for (const chain of chains) {\n    const bails = chain.builder.build().bail;\n    if (bails) {\n      await Promise.all(promises);\n    }\n    const resultPromise = chain.run(req, runOpts);\n    promises.push(resultPromise);\n    if (bails) {\n      const result = await resultPromise;\n      if (!result.isEmpty()) {\n        break;\n      }\n    }\n  }\n  return Promise.all(promises);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","bindAll","toString","runAllChains","object","protoKeys","getOwnPropertyNames","getPrototypeOf","forEach","key","maybeFn","bind","Date","toISOString","call","isNaN","length","String","req","chains","runOpts","promises","chain","bails","builder","build","bail","Promise","all","resultPromise","run","push","result","isEmpty"],"sources":["D:/test/textutils/node_modules/express-validator/lib/utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bindAll = void 0;\nexports.toString = toString;\nexports.runAllChains = runAllChains;\nconst bindAll = (object) => {\n    const protoKeys = Object.getOwnPropertyNames(Object.getPrototypeOf(object));\n    protoKeys.forEach(key => {\n        const maybeFn = object[key];\n        if (typeof maybeFn === 'function' && key !== 'constructor') {\n            object[key] = maybeFn.bind(object);\n        }\n    });\n    return object;\n};\nexports.bindAll = bindAll;\nfunction toString(value) {\n    if (value instanceof Date) {\n        return value.toISOString();\n    }\n    else if (value && typeof value === 'object' && value.toString) {\n        if (typeof value.toString !== 'function') {\n            return Object.getPrototypeOf(value).toString.call(value);\n        }\n        return value.toString();\n    }\n    else if (value == null || (isNaN(value) && !value.length)) {\n        return '';\n    }\n    return String(value);\n}\n/**\n * Runs all validation chains, and returns their results.\n *\n * If one of them has a request-level bail set, the previous chains will be awaited on so that\n * results are not skewed, which can be slow.\n * If this same chain also contains errors, no further chains are run.\n */\nasync function runAllChains(req, chains, runOpts) {\n    const promises = [];\n    for (const chain of chains) {\n        const bails = chain.builder.build().bail;\n        if (bails) {\n            await Promise.all(promises);\n        }\n        const resultPromise = chain.run(req, runOpts);\n        promises.push(resultPromise);\n        if (bails) {\n            const result = await resultPromise;\n            if (!result.isEmpty()) {\n                break;\n            }\n        }\n    }\n    return Promise.all(promises);\n}\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxBF,OAAO,CAACG,QAAQ,GAAGA,QAAQ;AAC3BH,OAAO,CAACI,YAAY,GAAGA,YAAY;AACnC,MAAMF,OAAO,GAAIG,MAAM,IAAK;EACxB,MAAMC,SAAS,GAAGR,MAAM,CAACS,mBAAmB,CAACT,MAAM,CAACU,cAAc,CAACH,MAAM,CAAC,CAAC;EAC3EC,SAAS,CAACG,OAAO,CAACC,GAAG,IAAI;IACrB,MAAMC,OAAO,GAAGN,MAAM,CAACK,GAAG,CAAC;IAC3B,IAAI,OAAOC,OAAO,KAAK,UAAU,IAAID,GAAG,KAAK,aAAa,EAAE;MACxDL,MAAM,CAACK,GAAG,CAAC,GAAGC,OAAO,CAACC,IAAI,CAACP,MAAM,CAAC;IACtC;EACJ,CAAC,CAAC;EACF,OAAOA,MAAM;AACjB,CAAC;AACDL,OAAO,CAACE,OAAO,GAAGA,OAAO;AACzB,SAASC,QAAQA,CAACF,KAAK,EAAE;EACrB,IAAIA,KAAK,YAAYY,IAAI,EAAE;IACvB,OAAOZ,KAAK,CAACa,WAAW,CAAC,CAAC;EAC9B,CAAC,MACI,IAAIb,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACE,QAAQ,EAAE;IAC3D,IAAI,OAAOF,KAAK,CAACE,QAAQ,KAAK,UAAU,EAAE;MACtC,OAAOL,MAAM,CAACU,cAAc,CAACP,KAAK,CAAC,CAACE,QAAQ,CAACY,IAAI,CAACd,KAAK,CAAC;IAC5D;IACA,OAAOA,KAAK,CAACE,QAAQ,CAAC,CAAC;EAC3B,CAAC,MACI,IAAIF,KAAK,IAAI,IAAI,IAAKe,KAAK,CAACf,KAAK,CAAC,IAAI,CAACA,KAAK,CAACgB,MAAO,EAAE;IACvD,OAAO,EAAE;EACb;EACA,OAAOC,MAAM,CAACjB,KAAK,CAAC;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeG,YAAYA,CAACe,GAAG,EAAEC,MAAM,EAAEC,OAAO,EAAE;EAC9C,MAAMC,QAAQ,GAAG,EAAE;EACnB,KAAK,MAAMC,KAAK,IAAIH,MAAM,EAAE;IACxB,MAAMI,KAAK,GAAGD,KAAK,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC,CAACC,IAAI;IACxC,IAAIH,KAAK,EAAE;MACP,MAAMI,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;IAC/B;IACA,MAAMQ,aAAa,GAAGP,KAAK,CAACQ,GAAG,CAACZ,GAAG,EAAEE,OAAO,CAAC;IAC7CC,QAAQ,CAACU,IAAI,CAACF,aAAa,CAAC;IAC5B,IAAIN,KAAK,EAAE;MACP,MAAMS,MAAM,GAAG,MAAMH,aAAa;MAClC,IAAI,CAACG,MAAM,CAACC,OAAO,CAAC,CAAC,EAAE;QACnB;MACJ;IACJ;EACJ;EACA,OAAON,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;AAChC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}