{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StandardValidation = void 0;\nconst utils_1 = require(\"../utils\");\nclass StandardValidation {\n  constructor(validator, negated, options = [],\n  // For testing only.\n  // Deliberately not calling it `toString` in order to not override `Object.prototype.toString`.\n  stringify = utils_1.toString) {\n    this.validator = validator;\n    this.negated = negated;\n    this.options = options;\n    this.stringify = stringify;\n  }\n  async run(context, value, meta) {\n    const values = Array.isArray(value) ? value : [value];\n    values.forEach(value => {\n      const result = this.validator(this.stringify(value), ...this.options);\n      if (this.negated ? result : !result) {\n        context.addError({\n          type: 'field',\n          message: this.message,\n          value,\n          meta\n        });\n      }\n    });\n  }\n}\nexports.StandardValidation = StandardValidation;","map":{"version":3,"names":["Object","defineProperty","exports","value","StandardValidation","utils_1","require","constructor","validator","negated","options","stringify","toString","run","context","meta","values","Array","isArray","forEach","result","addError","type","message"],"sources":["D:/test/textutils/node_modules/express-validator/lib/context-items/standard-validation.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StandardValidation = void 0;\nconst utils_1 = require(\"../utils\");\nclass StandardValidation {\n    constructor(validator, negated, options = [], \n    // For testing only.\n    // Deliberately not calling it `toString` in order to not override `Object.prototype.toString`.\n    stringify = utils_1.toString) {\n        this.validator = validator;\n        this.negated = negated;\n        this.options = options;\n        this.stringify = stringify;\n    }\n    async run(context, value, meta) {\n        const values = Array.isArray(value) ? value : [value];\n        values.forEach(value => {\n            const result = this.validator(this.stringify(value), ...this.options);\n            if (this.negated ? result : !result) {\n                context.addError({ type: 'field', message: this.message, value, meta });\n            }\n        });\n    }\n}\nexports.StandardValidation = StandardValidation;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,kBAAkB,GAAG,KAAK,CAAC;AACnC,MAAMC,OAAO,GAAGC,OAAO,CAAC,UAAU,CAAC;AACnC,MAAMF,kBAAkB,CAAC;EACrBG,WAAWA,CAACC,SAAS,EAAEC,OAAO,EAAEC,OAAO,GAAG,EAAE;EAC5C;EACA;EACAC,SAAS,GAAGN,OAAO,CAACO,QAAQ,EAAE;IAC1B,IAAI,CAACJ,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC9B;EACA,MAAME,GAAGA,CAACC,OAAO,EAAEX,KAAK,EAAEY,IAAI,EAAE;IAC5B,MAAMC,MAAM,GAAGC,KAAK,CAACC,OAAO,CAACf,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC;IACrDa,MAAM,CAACG,OAAO,CAAChB,KAAK,IAAI;MACpB,MAAMiB,MAAM,GAAG,IAAI,CAACZ,SAAS,CAAC,IAAI,CAACG,SAAS,CAACR,KAAK,CAAC,EAAE,GAAG,IAAI,CAACO,OAAO,CAAC;MACrE,IAAI,IAAI,CAACD,OAAO,GAAGW,MAAM,GAAG,CAACA,MAAM,EAAE;QACjCN,OAAO,CAACO,QAAQ,CAAC;UAAEC,IAAI,EAAE,OAAO;UAAEC,OAAO,EAAE,IAAI,CAACA,OAAO;UAAEpB,KAAK;UAAEY;QAAK,CAAC,CAAC;MAC3E;IACJ,CAAC,CAAC;EACN;AACJ;AACAb,OAAO,CAACE,kBAAkB,GAAGA,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}